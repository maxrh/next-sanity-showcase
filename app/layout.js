import './globals.css'
import IBMPlex from 'next/font/local'
import MaterialSymbols from 'next/font/local'
import { getPages } from './sanity/sanity.query'
import { headers } from "next/headers"
import ColorContextProvider from './context/colorContext'
import SiteHeader from './components/site-header'
import SiteFooter from './components/site-footer'

const ibmplex = IBMPlex({ 
    src: '/fonts/IBM_Plex_Sans_Var-Roman.woff2',
    subsets: ['latin'],
    variable: '--font-ibmplex',
})

const materialSymbols = MaterialSymbols({ 
    src: '/fonts/MaterialSymbolsSharp[FILL,GRAD,opsz,wght].woff2',
    style: 'normal',
    variable: '--font-symbols',
    display: 'block',
})


export const metadata = {
  title: 'Next-Sanity Showcase',
  description: 'Generated by create next app',
}

export default async function RootLayout({ children }) {
  const pages = await getPages()

  const headersList = headers()
  const pathname = headersList.get('x-url') || ""

  const isStudioRoute = pathname.startsWith('/studio')

  if (isStudioRoute) {
    return <html lang="en"><body>{children}</body></html>
  }

  return (
    <html lang="en" className='font-light' suppressHydrationWarning>
        <body className={`${ibmplex.variable} font-sans ${materialSymbols.variable}`}>
            <ColorContextProvider currentPath={pathname} pageColors={'mycolors'}>
                <div className='page-container'>
                    <SiteHeader />
                    {children}
                    <SiteFooter />
                </div>
            </ColorContextProvider>
        </body>
    </html>
  )
}
